<?xml version="1.0"?>

<!-- Works with Ant 1.7.0 and higher -->
<!-- These are useful combined with command line/ant test runners for mobile/smart client solutions exports; -->
<!-- see Servoy Wiki - Building A Software Factory for how to use test runners with ant on these exports -->
<!--<project name="Ant Solution Exporter" default="copy_fonts_dir" basedir=".">-->
<project name="Ant Solution Exporter" default="move_war" basedir=".">

    <import file="istanbul_test.xml"/>
    <target name="load_properties">
	   <property file="build.properties"/>
	</target>

    <target name="setup">
        <!-- store path to newest Eclipse launcher JAR in path id 'newest.equinox.launcher.path.id' -->
        <path id="newest.equinox.launcher.path.id">
            <first count="1">
              <sort>
                <fileset dir="${servoy_install.developer}\plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
                <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                  <date />
                </reverse>
              </sort>
            </first>
        </path>
        <echo level="info" message="Using equinox path id: ${servoy_install.developer}\plugins" />

        <!-- turn the path into a property -->
        <property name="equinox.launcher.jar.location" refid="newest.equinox.launcher.path.id" />

        <!-- now we are ready to start the workspace exporter -->
        <echo level="info" message="Using equinox launcher jar: ${equinox.launcher.jar.location}" />
    </target>


    <target name="export_war" depends="load_properties, setup">

			<echo level="info" message="Using application_server dir: ${servoy_install.app_server_dir}"/>
    		<echo level="info" message="Using developer          dir: ${servoy_install.developer}"/>
        	<echo level="info" message="Using equinox launcher   jar: ${equinox.launcher.jar.location}" />
    		<echo level="info" message="Using pluginLocations   dir: ${servoy_install.developer}/plugins/" />
            <echo level="info" message="Using workspace   dir: ${workspace_location}" />

        <java   classname="org.eclipse.equinox.launcher.Main"
                classpath="${equinox.launcher.jar.location}"
                failonerror="true"
                fork="true">
            <jvmarg value="-Xms40m" />
            <jvmarg value="-Xmx512m" />
            <jvmarg value="-XX:MaxPermSize=256M" />
            <jvmarg value="-Dosgi.configuration.cascaded=false" />
			<jvmarg value="-Dservoy.application_server.dir=${servoy_install.app_server_dir}" />
        	<!--<jvmarg value="-Djava.awt.headless=true" />-->
            <arg value="-application" />
            <arg value="com.servoy.eclipse.exporter.war.application" />

            <arg value="-data" />
            <arg value="${workspace_location}" />
            <arg value="-s" />
            <arg value="${solution_name}" />
            <arg value="-o" />
            <arg value="${output_dir}" />
            <arg value="-as" />
           	<arg value="${servoy_install.app_server_dir}" />
        	<arg value="-pluginLocations" />
        	<arg value="./plugins/" />
            <arg value="-p" />
            <arg value="${servoy_properties}" />
            <arg value="-verbose" />
            <arg value="-sw" />
            <arg value="-pl" />
            <arg value="-dbd" />
            <arg value="-dbi" />
            <arg value="-md" />
            <arg value="ws" />
            <arg value="-i18n" />
            <arg value="-users" />
            <arg value="-tables" />
            <arg value="-modules" />
            <arg value="-consoleLog" />
			<arg value="-defaultAdminUser" />
            <arg value="${default_admin_user}" />
            <arg value="-defaultAdminPassword" />
            <arg value="${default_admin_password}" />



            <!-- add here any of the optional arguments supported by the exporter; see 'war_export -help' for more info -->
        </java>
    </target>

    <macrodef name="run-ng-client-tests">
        <sequential>
            <echo level="verbose">
                *** Servoy Solution JS unit ng client tests ***
            </echo>

            <!-- Define a timeout so we know the test will finish eventually -->
            <junit fork="yes" forkmode="once" timeout="${test.timeout}" dir="${servoy.app_server.dir}" haltonfailure="false" haltonerror="false" errorProperty="test.failed" failureProperty="test.failed" printsummary="on">
                <jvmarg value="-XX:MaxPermSize=128m" />
                <classpath refid="classpath.run_test" />

                <sysproperty key="servoy.test.target-exports" value="${test.ng.exports.dir}" />
                <sysproperty key="servoy.test.property-file" value="${servoy.property.mssql.file}" />
                <!-- <sysproperty key="servoy.test.target-file-ext" value=".servoy" /> -->

                <formatter type="brief" usefile="false" />
                <formatter type="xml" />

                <!-- formatter similar to type="xml" but it shows test suite hierarchy nicely, in a tree-like result xml - useful to nicely show the place where a test failed (solution/form...)
                but this formatter is not included in ant yet - you would need to patch it yourself and integrate in ant lib from https://issues.apache.org/bugzilla/show_bug.cgi?id=48529
                if you plan on using it, either comment out the simple "xml" formatter or add "extension" attribute to one of them so they don't get into conflicts when generating xmls -->
                <!-- <formatter type="xml.suites" /> -->

                <test name="com.servoy.automation.jsunit.smartclient.ServoyJSUnitTestRunner" todir="${test.results.junit.dir}" />
            </junit>

            <antcall target="create_test_report"/>

            <!-- don't fail directly here so that test artifacts can be prepared for Jenkins before failing - and also allow any mobile tests to run -->
           </sequential>
    </macrodef>

    <target name="create_test_report">
        <junitreport todir="${test.results.junit.dir}">
            <fileset dir="${test.results.junit.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="noframes" todir="${test.results.junit.dir}" />

            <!-- report similar to format="noframes" but it shows test suite hierarchy nicely, in a tree-like result html - useful to nicely show the place where a test failed (solution/form...)
            but this report is not included in ant yet - you would need to patch it yourself and integrate in ant lib from https://issues.apache.org/bugzilla/show_bug.cgi?id=48529 -->
            <!-- <report format="noframes-suiteaware" todir="${test.results.junit.dir}" /> -->
        </junitreport>
    </target>

    <target name="clean_test_results">
        <echo level="verbose">
            *** Cleaning test results ***
        </echo>
        <make-clean-dir dir="${test.results.dir}" />
        <!-- also delete the servoy log file -->
        <delete failonerror="false" file="${servoy.app_server.dir}/servoy_log.txt" />

        <mkdir dir="${test.results.dir}" />
        <mkdir dir="${test.results.junit.dir}" />
        <mkdir dir="${test.results.istanbul.dir}" />
    </target>

	<target name="move_war" depends="load_properties, setup, export_war">
	  <copy file="${war_file}" todir="${war_dest_dir}"/>
	</target>

</project>
