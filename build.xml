<?xml version="1.0"?>

<!-- Works with Ant 1.7.0 and higher -->
<!-- These are useful combined with command line/ant test runners for mobile/smart client solutions exports; -->
<!-- see Servoy Wiki - Building A Software Factory for how to use test runners with ant on these exports -->
<!--<project name="Ant Solution Exporter" default="copy_fonts_dir" basedir=".">-->
<project name="Ant Solution Exporter" default="main" basedir=".">

    <property environment="env"/>
	<property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ANT_CONTRIB_JAR}"/>
        </classpath>
    </taskdef>

    <import file="servoy_utils.xml"/>
    <import file="code_coverage.xml"/>

<!-- code_coverage -->
    <target name="main" depends="load_properties, setup, export_solutions, run_smart_client_tests, collect_logs, finish"/>

    <target name="load_properties">
        <echo level="info" message="outputje ${servoy.test_solution_name}"/>
    </target>

    <target name="setup">
    		<if>
            	 <equals arg1="${servoy.test_solution_name}" arg2=""/>
            	 <then>
            	 	<fail message="Test solution Name not specified (property 'test.solution')"/>
            	 </then>
    		</if>
    		<script language="javascript"><![CDATA[
    			var TEST_SUFFIX = '_test'

    			var testSolution = project.getProperty('test.solution')
    			var solutionUnderTesting = project.getProperty('solution_under_testing')

    			if (!testSolution) { //if 'test.solution' is not set, derive it from the Job name
    				testSolution = project.getProperty('env.JOB_NAME') + TEST_SUFFIX
    				project.setProperty('test.solution', testSolution)
    			}

    			if (!solutionUnderTesting) { //if 'solution_under_testing' is not set, derive it from the 'test.solution' value
    				if (testSolution.slice(-5) === TEST_SUFFIX) {
    					project.setProperty('solution_under_testing', testSolution.slice(0,-5))
    				} else {
    					project.setProperty('solution_under_testing', testSolution)
    				}
    			}
    		]]></script>

    	</target>

        <target name="export_solutions" depends="get_equinox_jar">
        	<export-solution solutionNames="${servoy.test_solution_name}" workspace="${general.workspace_location}"/>
        </target>

        <target name="run_smart_client_tests" unless="export.failed" depends="prepare_classpath">
            <run-smart-client-tests/>
        	<if>
        	    <not>
        	        <isset property="test.failed"/>
        	    </not>
        	    <then>
        	    	<antcall target="move_solution_exports"/>
        	    	<!--<antcall target="generate_code_coverage_reports"/>
        	    	<antcall target="generate_code_analysis_reports"/>-->
        	    </then>
           </if>
        </target>

        <target name="collect_logs">
        	<!-- Move workspace log to build/logs directory -->
            <move file="${WORKSPACE}/.metadata/.log" tofile="${general.build.dir}/logs/workspace.log" failonerror="false"/>
        </target>

    	<target name="finish">
    		<!-- Move the collected logs to the folder for the specific Jenkins build as artifacts -->
    		<!--<move todir="${current_job.dir}/builds/${env.BUILD_NUMBER}/archive">
                <fileset dir="${build.dir}/logs" includes="*.log" />
            </move> -->

    <!-- TODO fix the if statement... isn't taking it
    		<if>
    			<istrue value="${export.solution_under_testing.as.artifact}"/>
    			<then> --> <!-- export the solution_under_testing solution as artifact -->

    				<!--<export-solution solutionNames="${solution_under_testing}" workspace="${WORKSPACE}"/>
    				<move todir="${current_job.dir}/builds/${env.BUILD_NUMBER}/archive">
    		            <fileset dir="${test.exports.regular.dir}" includes="${solution_under_testing}.servoy" />
    		        </move>-->
    <!--
    			</then>
    		</if>
    -->
    		<fail message="Exports failed: please check exporter log files." if="export.failed" />
    		<fail message="Tests failed: please check test reports." if="test.failed" />
    	</target>


	<target name="move_solution_exports" unless="test.failed">
	  <copy file="${war_file}" todir="${war_dest_dir}"/>
	</target>

</project>
